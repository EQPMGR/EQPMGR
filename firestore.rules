rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Public collections that anyone can read, but only our trusted
    // server actions (running as an authenticated user) can write to.
    match /bikeModels/{modelId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /masterComponents/{componentId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // User-specific data
    match /users/{userId} {
      // Allow a user to read and write to their own top-level user document.
      allow read, write: if request.auth.uid == userId;

      // Rules for the equipment subcollection nested under each user
      match /equipment/{equipmentId} {
        // A user can read or delete their own equipment documents.
        allow read, delete: if request.auth.uid == userId;
        
        // Allow a user to create a new equipment document.
        allow create: if request.auth.uid == userId;

        // Allow updates only if the user is the owner AND is only updating specific, safe fields.
        // This is the key change to fix the permission error.
        allow update: if request.auth.uid == userId &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly([
            'name', 'purchaseCondition', 'purchaseDate', 'purchasePrice', 'serialNumber', 'frameSize',
            'components', 'maintenanceLog'
          ]);
      }
    }
  }
}
